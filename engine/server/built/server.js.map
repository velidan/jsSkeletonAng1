{"version":3,"sources":["server.ts"],"names":[],"mappings":";;;;;;;;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;IACA,mBAA4B,KAAK,SAAL,CAAe,QAAQ,IAAR,CAAa,CAAb,CAAf,CAA5B;IACA,aAAsB,iBAAiB,SAAjB,CAA2B,CAA3B,EAA+B,iBAAiB,OAAjB,CAAyB,QAAzB,CAA/B,CAAtB;IACA,aAAa,QAAQ,UAAR,CAAb;AAIJ,IAAM,MAAM,QAAQ,KAAR,GAAN;IACF,eAAe,QAAQ,iBAAR,CAAf;IACA,SAAS,IAAI,YAAJ,CAAiB;AACtB,UAAO,IAAP;AACA,gBAAa,UAAb;CAFK,EAGN,SAHM,EAAT;IAIA,kBAAkB,QAAQ,IAAR,EAAc,MAAd;IAClB,MAAM,IAAI,eAAJ,CAAoB,EAAC,QAAS,GAAT,EAArB,CAAN;IACA,OAAO,IAAI,UAAJ,CAAe;AAClB,cAAW,OAAO,eAAP,GAAyB,aAAzB;AACX,WAAQ,IAAR;AACA,YAAS,KAAT;AACA,SAAM,GAAN;CAJG,CAAP;AAQA,IAAI,GAAJ,CAAQ,QAAQ,YAAR,EAAsB,OAAO,gBAAP,CAA9B;AAEA,IAAI,GAAJ,4BAAQ,iBAAW,IAAX;;;;;;2BAEC;;;;;;;;CAFD,CAAR;AAKA,IAAI,GAAJ,4BAAQ,kBAAW,GAAX;;;;;AACJ,yBAAK,MAAL,CAAY,cAAZ;;;;;;;;CADI,CAAR;AAIA,IAAI,EAAJ,CAAO,YAAP,EAAqB,UAAC,UAAD,EAAW;AAC5B,YAAQ,GAAR,CAAY,WAAZ,EAD4B;AAE5B,eAAW,EAAX,CAAc,SAAd,EAAyB,UAAC,OAAD,EAAc;AACnC,gBAAQ,GAAR,CAAY,cAAZ,EAA4B,OAA5B,EADmC;KAAd,CAAzB,CAF4B;CAAX,CAArB;AAWA,IAAI,MAAJ,CAAW,OAAO,IAAP,EAAa;WAAM,QAAQ,GAAR,CAAY,uBAAuB,OAAO,IAAP;CAAzC,CAAxB","file":"server.js","sourcesContent":["/// <reference path=\"../../../typings/tsd.d.ts\" />\r\n\r\nlet path = require('path'),\r\n    pathToServerFile : string = path.normalize(process.argv[1]),\r\n    enginePath : string = pathToServerFile.substring(0 , pathToServerFile.indexOf('server')),\r\n    jadeModule = require('koa-jade');\r\n\r\n\r\n\r\nconst app = require('koa')(), \r\n    configModule = require('./config/config'),\r\n    config = new configModule({\r\n        port : 8080,\r\n        enginePath : enginePath\r\n    }).getConfig(),\r\n    WebSocketServer = require('ws').Server,\r\n    wss = new WebSocketServer({server : app}),\r\n    jade = new jadeModule({\r\n        viewPath : config.backendRootPath + '/templates/',\r\n        debug : true,\r\n        pretty : false,\r\n        app : app\r\n    }); \r\n\r\n\r\n    app.use(require('koa-static')(config.frontendRootPath));\r\n    \r\n    app.use(function* (next) {\r\n       //console.log(this); \r\n       yield next;\r\n    });\r\n\r\n    app.use(function* (ctx) { \r\n        this.render('app/app.jade');  \r\n    })\r\n    \r\n    wss.on('connection', (wsInstance) : void => {\r\n        console.log(\"connected\");\r\n        wsInstance.on('message', (message : any) : void => {\r\n            console.log('resieved: %s', message);\r\n        } )\r\n    });\r\n    \r\n    \r\n\r\n    \r\n    \r\n    app.listen(config.port, () => console.log('server started at ' + config.port));"],"sourceRoot":"/source/"}